# HG changeset patch
# Parent 293754fa2c55da8e35f4f761d725969752fcde2d
# User Brian Smith <bsmith@mozilla.com>
Bug 842856, Part 2: Do not interpret a zero atTime to mean PR_Now()

diff -r 293754fa2c55 -r 004c542f5d7b lib/pkcs7/p7decode.c
--- a/lib/pkcs7/p7decode.c	Fri Mar 22 02:20:33 2013 -0700
+++ b/lib/pkcs7/p7decode.c	Fri Mar 22 02:28:07 2013 -0700
@@ -1241,24 +1241,25 @@ SEC_PKCS7ContentIsSigned(SEC_PKCS7Conten
     if (signerinfos != NULL && signerinfos[0] != NULL)
 	return PR_TRUE;
     else
 	return PR_FALSE;
 }
 
 
 /*
- * SEC_PKCS7ContentVerifySignature
+ * sec_pkcs7_verify_signature
+ *
  *	Look at a PKCS7 contentInfo and check if the signature is good.
  *	The digest was either calculated earlier (and is stored in the
  *	contentInfo itself) or is passed in via "detached_digest".
  *
  *	The verification checks that the signing cert is valid and trusted
  *	for the purpose specified by "certusage" at
- * 	- "atTime" if "atTime" is non-zero, or
+ * 	- "*atTime" if "atTime" is not null, or
  * 	- the signing time if the signing time is available in "cinfo", or
  *	- the current time (as returned by PR_Now).
  *
  *	In addition, if "keepcerts" is true, add any new certificates found
  *	into our local database.
  *
  * XXX Each place which returns PR_FALSE should be sure to have a good
  * error set for inspection by the caller.  Alternatively, we could create
@@ -1280,17 +1281,17 @@ SEC_PKCS7ContentIsSigned(SEC_PKCS7Conten
  * be NULL).
  */
 static PRBool
 sec_pkcs7_verify_signature(SEC_PKCS7ContentInfo *cinfo,
 			   SECCertUsage certusage,
 			   const SECItem *detached_digest,
 			   HASH_HashType digest_type,
 			   PRBool keepcerts,
-			   PRTime atTime)
+			   const PRTime *atTime)
 {
     SECAlgorithmID **digestalgs, *bulkid;
     const SECItem *digest;
     SECItem **digests;
     SECItem **rawcerts;
     CERTSignedCrl **crls;
     SEC_PKCS7SignerInfo **signerinfos, *signerinfo;
     CERTCertificate *cert, **certs;
@@ -1437,17 +1438,17 @@ sec_pkcs7_verify_signature(SEC_PKCS7Cont
      * XXX  This uses the signing time, if available.  Additionally, we
      * might want to, if there is no signing time, get the message time
      * from the mail header itself, and use that.  That would require
      * a change to our interface though, and for S/MIME callers to pass
      * in a time (and for non-S/MIME callers to pass in nothing, or
      * maybe make them pass in the current time, always?).
      */
     if (atTime) {
-	verificationTime = atTime;
+	verificationTime = *atTime;
     } else if (encoded_stime != NULL) {
 	verificationTime = stime;
     } else {
 	verificationTime = PR_Now();
     }
     if (CERT_VerifyCert (certdb, cert, PR_TRUE, certusage, verificationTime,
 			 cinfo->pwfn_arg, NULL) != SECSuccess)
 	{
@@ -1785,17 +1786,17 @@ PRBool
 SEC_PKCS7VerifyDetachedSignature(SEC_PKCS7ContentInfo *cinfo,
 				 SECCertUsage certusage,
 				 const SECItem *detached_digest,
 				 HASH_HashType digest_type,
 				 PRBool keepcerts)
 {
     return sec_pkcs7_verify_signature (cinfo, certusage,
 				       detached_digest, digest_type,
-				       keepcerts, 0);
+				       keepcerts, NULL);
 }
 
 /*
  * SEC_PKCS7VerifyDetachedSignatureAtTime
  *      Look at a PKCS7 contentInfo and check if the signature matches
  *      a passed-in digest (calculated, supposedly, from detached contents).
  *      The verification checks that the signing cert is valid and trusted
  *      for the purpose specified by "certusage" at time "atTime".
@@ -1808,17 +1809,17 @@ SEC_PKCS7VerifyDetachedSignatureAtTime(S
 				       SECCertUsage certusage,
 				       const SECItem *detached_digest,
 				       HASH_HashType digest_type,
 				       PRBool keepcerts,
 				       PRTime atTime)
 {
     return sec_pkcs7_verify_signature (cinfo, certusage,
 				       detached_digest, digest_type,
-				       keepcerts, atTime);
+				       keepcerts, &atTime);
 }
 
 /*
  * Return the asked-for portion of the name of the signer of a PKCS7
  * signed object.
  *
  * Returns a pointer to allocated memory, which must be freed.
  * A NULL return value is an error.
diff -r 293754fa2c55 -r 004c542f5d7b lib/smime/smime.def
--- a/lib/smime/smime.def	Fri Mar 22 02:20:33 2013 -0700
+++ b/lib/smime/smime.def	Fri Mar 22 02:28:07 2013 -0700
@@ -262,14 +262,14 @@ NSS_Get_NSS_PointerToCMSGenericWrapperDa
 ;+       *;
 ;+};
 ;+NSS_3.13 {    # NSS 3.13 release
 ;+    global:
 NSSSMIME_GetVersion;
 ;+    local:
 ;+       *;
 ;+};
-;+NSS_3.14.4 {    # NSS 3.14.4 release
+;+NSS_3.15 {    # NSS 3.15 release
 ;+    global:
 SEC_PKCS7VerifyDetachedSignatureAtTime;
 ;+    local:
 ;+       *;
 ;+};
